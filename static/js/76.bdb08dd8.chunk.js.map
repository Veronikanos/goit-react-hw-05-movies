{"version":3,"file":"static/js/76.bdb08dd8.chunk.js","mappings":"yNACA,EAA2B,uB,SC4C3B,MAxCA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,IARAE,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAYH,GAASI,MAAK,SAAAN,GACxBC,EAAQD,EACT,GACF,GAAE,CAACE,IAECF,EAEL,OACE,iCACE,mBACA,eAAIO,UAAWC,EAAf,SACGR,GACCA,EAAKS,KAAI,SAAAC,GACP,OACE,0BACGA,EAAKC,eACJ,gBACEC,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAKH,EAAKI,KACVC,MAAM,SAGV,uBAAIL,EAAKI,QACT,0BACE,yCADF,IAC2BJ,EAAKM,eAVzBN,EAAKO,GAcjB,QAIV,C,wMCxCKC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAmB,mCAAG,+GAERL,EAASM,IAAI,sBAAuB,CAAC,GAF7B,uBAEvBC,EAFuB,EAEvBA,KAFuB,kBAGxBA,EAAKC,SAHmB,uCAK/BC,EAAAA,GAAAA,QAAc,QALiB,kBAMxB,KAAMC,SANkB,yDAAH,qDAUnBC,EAAiB,mCAAG,WAAMC,GAAN,kGAENZ,EAASM,IAAT,iBAAuBM,GAAY,CACxDT,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAFqB,kBAMtBA,GANsB,yDAQtB,KAAMG,SARgB,yDAAH,sDAYjBvB,EAAW,mCAAG,WAAMyB,GAAN,kGAEAZ,EAASM,IAAT,iBAAuBM,EAAvB,YAA2C,CAChET,OAAQ,CAAEU,SAAU,WAHC,uBAEfN,EAFe,EAEfA,KAFe,kBAKhBA,EAAKzB,MALW,yDAOhB,KAAM4B,SAPU,yDAAH,sDAWXI,EAAc,mCAAG,WAAMF,GAAN,kGAEHZ,EAASM,IAAT,iBAAuBM,EAAvB,YAA2C,CAChET,OAAQ,CAAEU,SAAU,WAHI,uBAElBN,EAFkB,EAElBA,KAFkB,kBAKnBA,EAAKC,SALc,yDAOnB,KAAME,SAPa,yDAAH,sDAWdK,EAAkB,mCAAG,WAAMC,GAAN,kGAEPhB,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CAAEU,SAAU,QAASI,KAAM,EAAGC,eAAe,EAAOF,MAAAA,KAHhC,uBAEtBT,EAFsB,EAEtBA,KAGRY,QAAQC,IAAIb,EAAKC,SALa,kBAMvBD,GANuB,yDAQvB,KAAMG,SARiB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\"};","import { getCastById } from 'components/service/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './Cast.module.css';\n\nfunction Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n\n    getCastById(movieId).then(cast => {\n      setCast(cast);\n    });\n  }, [movieId]);\n\n  if (!cast) return;\n\n  return (\n    <>\n      <hr />\n      <ul className={styles.castList}>\n        {cast &&\n          cast.map(item => {\n            return (\n              <li key={item.id}>\n                {item.profile_path && (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                    alt={item.name}\n                    width=\"300\"\n                  />\n                )}\n                <p>{item.name}</p>\n                <p>\n                  <span>Character:</span> {item.character}\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '2d95e97f255e7635245c1980eab541d3',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day', {});\n    return data.results;\n  } catch (error) {\n    toast.warning('OOPS');\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}`, {\n      params: { language: 'en-US' },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const getCastById = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const getReviewsById = async movie_id => {\n  try {\n    const { data } = await instance.get(`/movie/${movie_id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const searchMovieByTitle = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    console.log(data.results);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCastById","then","className","styles","map","item","profile_path","src","alt","name","width","character","id","instance","axios","baseURL","params","api_key","fetchTrendingMovies","get","data","results","toast","message","fetchMovieDetails","movie_id","language","getReviewsById","searchMovieByTitle","query","page","include_adult","console","log"],"sourceRoot":""}